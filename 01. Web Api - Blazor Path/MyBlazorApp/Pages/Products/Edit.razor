@page "/products/edit/{ProductId:int}"

@using MyFirstApi.Client
@using MyBlazorApp.ViewModel.Products

@inject ProductsClient ProductsClient
@inject CategoryClient CategoryClient
@inject NavigationManager NavManager

<h1>Edit Product: @viewModel.Name</h1>

<NavLink href="/products">
    Back
</NavLink>

<EditForm Model="@viewModel" OnValidSubmit="@OnSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <!-- Name -->
    <div class="form-group row">
        <label class="col-form-label col-2">Name</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="viewModel.Name" />
        </div>
    </div>
    <!-- Description -->
    <div class="form-group row">
        <label class="col-form-label col-2">Description</label>
        <div class="col-md-4">
            <InputTextArea class="form-control" @bind-Value="viewModel.Description" />
        </div>
    </div>
    <!-- Category -->
    <div class="form-group row">
        <label class="col-form-label col-md-2">Category</label>
        <div class="col-md-4">
            <InputSelect class="form-control" @bind-Value="viewModel.CategoryId">
                @foreach (var category in _categories)
                {
                    <option value="@category.CategoryID">@category.Name</option>
                }
            </InputSelect>
        </div>
    </div>
    <!-- Price -->
    <div class="form-group row">
        <label class="col-form-label col-2">Price</label>
        <div class="col-md-4">
            <InputNumber class="form-control" @bind-Value="viewModel.Price" />
        </div>
    </div>
    <!-- Submit -->
    <div class="form-group row">
        <div class="col-md-10 ml-auto">
            <button class="btn btn-primary">
                Update
            </button>
        </div>
    </div>
</EditForm>

@code {

    [Parameter]
    public int ProductId { get; set; }

    private CreateProductsViewModel viewModel = new();

    private ICollection<CategoryDto> _categories = new List<CategoryDto>();

    protected override async Task OnInitializedAsync()
    {
        //_categories = await CategoryClient.GetCategoriesAsync();
        //var product = await ProductsClient.GetProductAsync(ProductId);

        //viewModel = new CreateProductsViewModel
        //{
        //    Description = product.Description,
        //    Name = product.Name,
        //    Price = product.Price,
        //    CategoryId = product.CategoryId
        //};
    }

    private async Task OnSubmit()
    {
        //var product = new ProductModel
        //{
        //    Description = viewModel.Description,
        //    Name = viewModel.Name,
        //    Price = viewModel.Price,
        //    CategoryId = viewModel.CategoryId
        //};

        //await ProductsClient.UpdateProductAsync(ProductId, product);

        //NavManager.NavigateTo("/products");
    }
}